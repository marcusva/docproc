#### Build stage ####
FROM golang AS build

# Build nsq
RUN go get -v github.com/nsqio/nsq/... \
 && wget -O /bin/dep https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 \
 && chmod +x /bin/dep \
 && cd /go/src/github.com/nsqio/nsq \
 && /bin/dep ensure \
 && ./test.sh \
 && CGO_ENABLED=0 make DESTDIR=/opt PREFIX=/nsq GOFLAGS='-ldflags="-s -w"' install;

# Build the docproc applications
ARG BUILD_FLAGS="-tags nsq"
ENV SRC_DIR=/go/src/github.com/marcusva/docproc
ADD . $SRC_DIR

RUN cd $SRC_DIR \
 && /bin/dep ensure \
 && go build $BUILD_FLAGS -v -o /app/docproc.fileinput ./docproc.fileinput \
 && go build $BUILD_FLAGS -v -o /app/docproc.preproc ./docproc.preproc \
 && go build $BUILD_FLAGS -v -o /app/docproc.renderer ./docproc.renderer \
 && go build $BUILD_FLAGS -v -o /app/docproc.postproc ./docproc.postproc \
 && go build $BUILD_FLAGS -v -o /app/docproc.output ./docproc.output

 #### Image creation ####
FROM golang

COPY --from=build /opt/nsq/bin/nsqd /usr/local/bin/nsqd
RUN ln -s /usr/local/bin/nsqd /bin/nsqd
COPY --from=build /app /app
